cmake_minimum_required(VERSION 3.16)
project(flashlight-examples LANGUAGES CXX C VERSION 0.4.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# If building in source, we already have the flashlight target
if (NOT TARGET flashlight)
  find_package(flashlight CONFIG REQUIRED)
endif ()

function(build_example SRCFILE)
  get_filename_component(src_name ${SRCFILE} NAME_WE)
  set(target "${src_name}")
  add_executable(${target} ${SRCFILE})
  if (TARGET flashlight)
    target_link_libraries(${target} PRIVATE flashlight)
  else ()
    target_link_libraries(${target} PRIVATE flashlight::flashlight)
  endif()
endfunction(build_example)

build_example(Benchmark.cpp)
build_example(Mnist.cpp)
build_example(RnnLm.cpp)
build_example(RnnClassification.cpp)
build_example(LinearRegression.cpp)
build_example(Perceptron.cpp)
build_example(Classification.cpp)
build_example(Xor.cpp)
build_example(AdaptiveClassification.cpp)

if (FL_BUILD_DISTRIBUTED)
  build_example(DistributedTraining.cpp)
endif ()
