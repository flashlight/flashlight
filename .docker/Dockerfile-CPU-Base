# ==================================================================
# module list
# ------------------------------------------------------------------
# Ubuntu           18.04
# OpenMPI          latest       (apt)
# cmake            3.18         (git)
# MKL              2018.4-057   (apt)
# arrayfire        3.7.1        (git, CPU backend)
# MKLDNN           4bdffc2      (git)
# Gloo             b7e0906      (git)
# libsndfile       4bdd741      (git)
# FFTW             latest       (apt)
# KenLM            e47088d      (git)
# GLOG             latest       (apt)
# gflags           latest       (apt)
# python           3.6          (apt)
# ==================================================================

FROM ubuntu:18.04

RUN APT_INSTALL="apt-get install -y --no-install-recommends" && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        build-essential \
        ca-certificates \
        wget \
        git \
        vim \
        emacs \
        nano \
        htop \
        g++ \
        # for MKL
        apt-transport-https \
        gpg-agent gnupg2 \
        # for arrayfire CPU backend
        # OpenBLAS
        libopenblas-dev libfftw3-dev liblapacke-dev \
        # ATLAS
        libatlas3-base libatlas-base-dev libfftw3-dev liblapacke-dev \
        # ssh for OpenMPI
        openssh-server openssh-client \
        # OpenMPI
        libopenmpi-dev libomp-dev openmpi-bin \
        # for libsndfile
        autoconf automake autogen build-essential libasound2-dev \
        libflac-dev libogg-dev libtool libvorbis-dev pkg-config python \
        # for libsndfile for ubuntu 18.04
        libopus-dev \
        # FFTW
        libfftw3-dev \
        # for kenlm
        zlib1g-dev libbz2-dev liblzma-dev libboost-all-dev \
        # gflags
        libgflags-dev libgflags2.2 \
        # for glog
        libgoogle-glog-dev libgoogle-glog0v5 \
        # for python sox
        sox && \
# ==================================================================
# cmake 3.18 (for MKLDNN)
# ------------------------------------------------------------------
    apt-get purge -y cmake && \
    cd /tmp && wget https://cmake.org/files/v3.18/cmake-3.18.4.tar.gz  && \
    tar -xzvf cmake-3.10.3.tar.gz  && cd cmake-3.10.3  && \
    ./bootstrap && make -j$(nproc) &&  make install && cmake --version && \
# ==================================================================
# MKL https://software.intel.com/en-us/mkl
# ------------------------------------------------------------------
    cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
# for build in March 2020 this row should be removed to prevent from the error
# E: Failed to fetch https://apt.repos.intel.com/intelpython/binary/Packages  Writing more data than expected (15520 > 15023) E: Some index files failed to download. They have been ignored, or old ones used instead.
#    wget https://apt.repos.intel.com/setup/intelproducts.list -O /etc/apt/sources.list.d/intelproducts.list && \
    sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' && \
    apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL intel-mkl-64bit-2018.4-057 && \
    export MKLROOT=/opt/intel/mkl && \
# ==================================================================
# arrayfire with CPU backend https://github.com/arrayfire/arrayfire/wiki/
# ------------------------------------------------------------------
    cd /tmp && git clone --recursive https://github.com/arrayfire/arrayfire.git && \
    wget https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.gz && tar xf boost_1_70_0.tar.gz && \
    cd arrayfire && git checkout v3.7.1  && git submodule update --init --recursive && \
    mkdir build && cd build && \
    CXXFLAGS=-DOS_LNX cmake .. -DCMAKE_BUILD_TYPE=Release -DAF_BUILD_CUDA=OFF -DAF_BUILD_OPENCL=OFF -DAF_BUILD_EXAMPLES=OFF -DBOOST_INCLUDEDIR=/tmp/boost_1_70_0 && \
    make -j$(nproc) && make install && \
# ==================================================================
# MKLDNN https://github.com/intel/mkl-dnn/
# ------------------------------------------------------------------
    cd /tmp && git clone https://github.com/intel/mkl-dnn.git && \
    cd mkl-dnn && git checkout 4bdffc2 && mkdir -p build && cd build && \
    cmake .. -DMKLDNN_USE_MKL=FULL && \
    make -j$(nproc) && make install && \
# ==================================================================
# Gloo https://github.com/facebookincubator/gloo.git
# ------------------------------------------------------------------
    cd /tmp && git clone https://github.com/facebookincubator/gloo.git && \
    cd gloo && git checkout b7e0906 && mkdir build && cd build && \
    cmake .. -DUSE_MPI=ON && \
    make -j$(nproc) && make install && \
# ==================================================================
# python (for bindings)
# ------------------------------------------------------------------
    PIP_INSTALL="python3 -m pip --no-cache-dir install --upgrade" && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        software-properties-common \
        && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        python3.6 \
        python3.6-dev \
        && \
    wget -O ~/get-pip.py \
        https://bootstrap.pypa.io/get-pip.py && \
    python3.6 ~/get-pip.py && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python && \
    $PIP_INSTALL \
        setuptools \
        && \
    $PIP_INSTALL \
        numpy \
        sox \
        tqdm && \
# ==================================================================
# libsndfile https://github.com/erikd/libsndfile.git
# ------------------------------------------------------------------
    cd /tmp && git clone https://github.com/erikd/libsndfile.git && \
    cd libsndfile && git checkout 4bdd7414602946a18799b514001b0570e8693a47 && \
    ./autogen.sh && ./configure --enable-werror && \
    make && make check && make install && \
# ==================================================================
# KenLM https://github.com/kpu/kenlm
# ------------------------------------------------------------------
    cd /root && git clone https://github.com/kpu/kenlm.git && \
    cd kenlm && git checkout e47088ddfae810a5ee4c8a9923b5f8071bed1ae8 && \
    mkdir build && cd build && \
    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \
    make -j$(nproc) && make install && \
# ==================================================================
# config & cleanup
# ------------------------------------------------------------------
    ldconfig && \
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/*
