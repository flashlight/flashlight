# ==================================================================
# module list
# ------------------------------------------------------------------
# Ubuntu           20.04
# OpenMPI          latest       (apt)
# cmake            3.16.3       (oficial binaries)
# MKL              2020.4-912   (apt)
# arrayfire        3.7.3        (git, CPU backend)
# libsndfile       latest       (apt, v1.0.28-4)
# oneDNN           v2.0         (git)
# Gloo             1da2117      (git)
# FFTW             latest       (apt)
# KenLM            0c4dd4e      (git)
# GLOG             latest       (apt)
# gflags           latest       (apt)
# python3          latest       (apt)
# ==================================================================

#############################################################################
#                             APT IMAGE + CMAKE                             #
#############################################################################

FROM ubuntu:20.04 as cpu_base_builder

ENV APT_INSTALL="apt-get install -y --no-install-recommends"
ENV PATH="/opt/cmake/bin:$PATH"
ENV MKLROOT="/opt/intel/mkl"
ENV KENLM_ROOT=/opt/kenlm

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        build-essential \
        ca-certificates \
        wget \
        git \
        g++ \
        # for cmake
        curl \
        # for arrayfire CPU backend
        # OpenBLAS
        libopenblas-dev liblapacke-dev \
        # ATLAS
        libatlas3-base libatlas-base-dev liblapacke-dev \
        # FFTW
        libfftw3-dev \
        # ssh for OpenMPI
        openssh-server openssh-client \
        # OpenMPI
        libopenmpi-dev libomp-dev openmpi-bin \
        # for kenlm
        zlib1g-dev libbz2-dev liblzma-dev libboost-all-dev &&
# ==================================================================
# cmake
# ------------------------------------------------------------------
    apt-get purge -y cmake && \
    mkdir /opt/cmake && \
    curl -sSLo - https://cmake.org/files/v3.16/cmake-3.16.3-Linux-x86_64.tar.gz | tar -xz -C /opt/cmake --strip-components 1 && \
# ==================================================================
# clean up everything
# ------------------------------------------------------------------
    ldconfig && \
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/*


#############################################################################
#                                DEPS IMAGES                                #
#############################################################################

FROM cpu_base_builder as cpu_arrayfire
# ==================================================================
# arrayfire with CPU backend https://github.com/arrayfire/arrayfire/wiki/
# ------------------------------------------------------------------
RUN cd /tmp && git clone --recursive https://github.com/arrayfire/arrayfire.git && \
    wget https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.gz && tar xf boost_1_70_0.tar.gz && \
    cd arrayfire && git checkout v3.7.3  && git submodule update --init --recursive && \
    mkdir build && cd build && \
    CXXFLAGS=-DOS_LNX cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/arrayfire -DAF_BUILD_CUDA=OFF -DAF_BUILD_OPENCL=OFF -DAF_BUILD_EXAMPLES=OFF -DBOOST_INCLUDEDIR=/tmp/boost_1_70_0 && \
    make -j$(nproc) && make install

FROM cpu_base_builder as cpu_onednn
# ==================================================================
# oneDNN https://github.com/oneapi-src/oneDNN
# ------------------------------------------------------------------
RUN cd /tmp && git clone https://github.com/oneapi-src/oneDNN && \
    cd oneDNN && git checkout v2.0 && mkdir -p build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/onednn && \
    make -j$(nproc) && make install

FROM cpu_base_builder as cpu_gloo
# ==================================================================
# Gloo https://github.com/facebookincubator/gloo.git
# ------------------------------------------------------------------
RUN cd /tmp && git clone https://github.com/facebookincubator/gloo.git && \
    cd gloo && git checkout 1da2117 && mkdir build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/gloo -DUSE_MPI=ON && \
    make -j$(nproc) && make install

FROM cpu_base_builder as cpu_kenlm
# ==================================================================
# KenLM https://github.com/kpu/kenlm
# ------------------------------------------------------------------
RUN cd /tmp && git clone https://github.com/kpu/kenlm.git && \
    cd kenlm && git checkout 0c4dd4e && \
    mkdir build && cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/kenlm -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \
    make -j$(nproc) && make install

#############################################################################
#                             FINAL IMAGE                                   #
#############################################################################

FROM cpu_base_builder as cpu_final

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        vim \
        emacs \
        nano \
        htop \
        # for MKL
        apt-transport-https gpg-agent gnupg2 \
        # for libsndfile for ubuntu 18.04
        libopus-dev \
        # libsndfile
        libsndfile1-dev \
        # gflags
        libgflags-dev libgflags2.2 \
        # for glog
        libgoogle-glog-dev libgoogle-glog0v5 \
        # python sox
        sox python3-dev python3-pip python3-distutils && \
# ==================================================================
# clean up everything
# ------------------------------------------------------------------
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/*
# ==================================================================
# MKL https://software.intel.com/en-us/mkl
# ------------------------------------------------------------------
RUN cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \
    sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' && \
    apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL intel-mkl-64bit-2020.4-912 && \
# ==================================================================
# clean up everything
# ------------------------------------------------------------------
    apt-get clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/*
# ==================================================================
# python (for bindings and preprocessing)
# ------------------------------------------------------------------
RUN ln -s /usr/bin/python3 /usr/local/bin/python && ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \
    python3 -m pip --no-cache-dir install --upgrade setuptools numpy sox tqdm

COPY --from=cpu_arrayfire  /opt/arrayfire  /opt/arrayfire
COPY --from=cpu_onednn     /opt/onednn     /opt/onednn
COPY --from=cpu_gloo       /opt/gloo       /opt/gloo
COPY --from=cpu_kenlm      /opt/kenlm      /opt/kenlm
